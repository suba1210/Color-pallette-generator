<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coolors</title>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Vollkorn&display=swap" rel="stylesheet">



</head>

<style>

body{
    font-family: 'Vollkorn', serif;
}

.pallete{
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.column{
    display: flex;
    flex-direction: column;
    margin : 15px;
    justify-content: center;
    align-items: center;
}

.color{

    width:90px;
    height: 360px;
    border:2px solid black ;
    position: relative;
    border-radius:8px;

}

.button{
    width:30px;
    height:30px;
    border-radius: 50%;
    background-color: bisque;
    margin-top: 18px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bolder;
    cursor : pointer;
}

body {
    margin: 0;
    padding : 0;
    min-height: 100vh;
    background-color:rgb(255,240,245);
}
.header{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    max-width: 1000px;
    width:90%;
    align-items: center;
    margin :0 auto;
    background-color:rgb(240,248,255);
    border: 1px solid black;
}
.center{
    display: flex;
    justify-content: center;
    align-items: center;
}

.center > *{
    margin : 10px;
    background-color:#828afd;
    color: white;
    padding:10px 15px;
    border: none;
    cursor: pointer;
    width: fit-content;
}

input{
    margin:10px;
}


</style>


<body>

    <div class='header'>

        <div><h1 style='margin:20px;color:blueviolet'>Edit your Color Pallette</h1></div>

        <div>

            
            <a style='margin:20px;text-decoration: none;font-weight: bolder;color:blueviolet' href='/color/create'>Home</a>

            <a style='margin:20px;text-decoration: none;font-weight: bolder;color:blueviolet' href='/user/colors/show/<%=currentUser._id%>'>Your Color Pallettes</a>   

            <a style='margin:20px;text-decoration: none;font-weight: bolder;color:blueviolet' href='/logout'>Logout</a>


        </div>


    </div>


    <% let allColors = color.colors %> 

    <div class='pallete'>

        <% for(let i=0;i<allColors.length;i++){ %>
        
            <div class='column' >

                <input type='color' id='picker' name='picker' onchange="this.nextElementSibling.style.backgroundColor= this.value ;">

                <div class='color'></div>

                <div class='button'>—</div>
    
            </div>


        <% } %> 


    </div>

    <br>

    <div class='center'>

        <button id='addButton'>Add Color</button>

        <button id='randButton'>Generate Random Colors</button>

        <button onclick='send()' id='saveButton'>Save</button>

        <a style='text-decoration: none;' href='/color/single/<%=color._id%>'>Back to show pallette</a>

    </div>

    










    <script>

        let buttons = document.querySelectorAll('.button');
        let addButtonSelect = document.getElementById('addButton');
        let palleteSelect = document.querySelector('.pallete');

        let allColors = '<%-allColors%>';

        let colorSelect = document.querySelectorAll('.color');

        allColors = allColors.split("),");

        for(let i=0;i<allColors.length-1;i++)
        {
            allColors[i] = allColors[i] + ')';
        }

        for(let i=0;i<allColors.length;i++)
        {
            colorSelect[i].style.backgroundColor = allColors[i];
        }

    function randomGeneartor(){
    var letters = '0123456789ABCDEF';
    var color = '#';
    for (var i = 0; i < 6; i++) {
        color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
    }
        
buttons.forEach((button)=>{
    button.addEventListener('click',()=>{
        button.parentNode.parentNode.removeChild(button.parentNode);
        checkCount();
        checkColumns()
    })
})


addButtonSelect.addEventListener('click',()=>{
    let a = document.createElement("div");
    a.className="column";
    palleteSelect.appendChild(a);

    let i = document.createElement('input');
    i.setAttribute("type", "color");
    i.setAttribute("name", "picker");
    i.onchange = function(){i.nextElementSibling.style.backgroundColor= i.value;}
    a.appendChild(i);

    let b = document.createElement("div");
    b.className = 'color';
    b.style.backgroundColor = randomGeneartor();
    a.appendChild(b);

    let c = document.createElement("div");
    c.className = 'button';
    let txt=document.createTextNode('—');
    c.appendChild(txt);
    a.appendChild(c);
    c.addEventListener('click',()=>{
        c.parentNode.parentNode.removeChild(c.parentNode);
        checkCount();
        checkColumns()
    })

    checkCount();
    checkColumns();
})

checkCount();

function checkCount(){
    if(document.querySelectorAll('.column').length<=2)
    {
        document.querySelectorAll('.button').forEach((button)=>{
            button.style.display='none';
        })
    }
    else{
        document.querySelectorAll('.button').forEach((button)=>{
            button.style.display='flex';
        })
    }
    return;
}


function checkColumns(){

    if(document.querySelectorAll('.column').length>=8){
        addButtonSelect.style.display = 'none';
    }
    else{
        addButtonSelect.style.display = 'block';
    }
    return;

}


let randButtonSelect = document.getElementById('randButton');


randButtonSelect.addEventListener('click',()=>{
    document.querySelectorAll('.color').forEach((color)=>{
    let randomColor = randomGeneartor();
    color.style.backgroundColor = randomColor;
})
})      


const saveButton = document.getElementById('saveButton');

let url1 = window.location.href;
let ind1 = url1.indexOf('edit/');
let channel1 = url1.substr(ind1+'edit/'.length);


function send () {
    let sendingColors = [];
    let colorSend = document.querySelectorAll('.color');
    colorSend.forEach((color)=>{
        sendingColors.push(color.style.backgroundColor);
    })


    const data = {
        colors : sendingColors,
        colorId : channel1
    }
    console.log(data);

    var xhr = new window.XMLHttpRequest()
    xhr.open('POST', "http://localhost:3000/dataedit" , true)
    xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8')
    xhr.send(JSON.stringify(data));
    alert("Your Pallete is updated!");
    location.reload();

}






</script>





</body>
</html>